# rogpe Nutri - [ Mini aplicação para nutrição ]

Desenvolvimento de um site utilizando HTML, CSS e Javascript.

Exemplo da aplicação: https://rogpe-nutri.herokuapp.com/

[www.about.me/rodolfopeixoto](http://www.about.me/rodolfopeixoto) 

Versão do Projeto 0.0.1
================

Sobre esta versão
---------------------
Site desenvolvido:
Utilizei: 
 - HTML 5
 - CSS 3
 - Javascript

Acompanhe as atualizações do projeto
---------------------



ATENÇÃO
---------------------



Configuração inicial
---------------------
Basta clonar o repositório e estudar o código, caso queira entender as técnicas.


Documentação
---------------------
Para poder acessar o DOM basta usar o querySelector
```
var campoFiltro    =  document.querySelector("#filtrar-tabela");
```

Para poder fazer o javascript 'escutar' as ações do usuário basta usar o addEventListener com seus parâmetros

```
campoFiltro.addEventListener('input',function(){
    console.log(this.value);
  var pacientes = document.querySelectorAll(".paciente");
  // código aqui
}
```

Para acessar o valor basta acessar o método value
```
  campoFiltro.value
```
Varrer um array de DOM basta usar o querySelectorAll

```
var pacientes = document.querySelectorAll(".paciente");
  
  if(this.value.length > 0){
    for(var i = 0; i < pacientes.length; i++){
        var paciente = pacientes[i];
        
        var tdNome     = paciente.querySelector('.info-nome'); 
        var nome       = tdNome.textContent;

        var expressao  = new RegExp(this.value, "i");

        if(!expressao.test(nome)){
            paciente.classList.add('invisivel');
        }else{
          paciente.classList.remove('invisivel');
        }
    }

```
Adicionar ou remover uma classe ao DOM, basta utilizar o .classList.add('oNomeDaClasse'); ou .classList.remove('oNomeDaClasse').

***OBS:*** lembre-se de sempre adicionar o estilo no CSS para manter a responsabilidade de cada arquivo.

```
if(!expressao.test(nome)){
            paciente.classList.add('invisivel');
        }else{
          paciente.classList.remove('invisivel');
        }
```


Adicionar evento de duplo clique able.addEventListener('dblclick', () => /* codigo aqui */)

```

var pacientes = document.querySelectorAll(".paciente");
var table = document.querySelector("table");

table.addEventListener('dblclick',function(event) {
    
    event.target.parentNode.classList.add('fadeOut');
    setTimeout(function(){
        event.target.parentNode.remove();
    },500);
  }); 

```
O código abaixo diz para disparar o evento quando a tag exemplo <h1>CLICADO </h1> for clicada adicione
ao pai uma classe.

```
event.target.parentNode.classList.add('fadeOut'); 
```

Modificar o conteudo de uma TAG basta usar o método .textContent

```
var titulo = document.querySelector(".titulo");
titulo.textContent = "PlusLife";
```

O método .toFixed(2) retorna até duas casas decimais.

```
function calculaImc(peso, altura) {
    var imc = 0;
    imc = peso / (altura * altura);

    return imc.toFixed(2);
}
```

Fazer requisição AJAX com javascript puro. new XMLHttpRequest();

```
var botao      =    document.querySelector('#buscar-pacientes');

botao.addEventListener('click',function(){
  var xhr = new XMLHttpRequest();
  
   xhr.open("GET","http://api-pacientes.herokuapp.com/pacientes");
   xhr.send();
   xhr.addEventListener("load",function(){


      if(xhr.status == 200){

        var response   =  xhr.responseText;
        var pacientes  = JSON.parse(response);
        
        pacientes.forEach(function(paciente) {
          adicinaPacienteNaTabela(paciente)
        }, this);
  
      }else{
          console.log(xhr.status);
          console.log(xhr.responseText);
      }

   });
});

```

Fazer com que o formulário não recarregue a página

```
event.preventDefault();
```

Limpar o formulário

```
  var form        = document.querySelector("#form-adiciona");
  form.reset();

```

Adicionar ao pai um filho. exemplo: adicionar <tr></tr> em <table></table> para ficar assim:

```
 <table>
   <tr></tr>
 </table>
```
Basta usar o append tabela.appendChild('tr');

```
 var tabela = document.querySelector("table");
 tabela.appendChild('tr');
```

Pera pegar o valor do formulário basta usar o método .value

```
 var paciente = {
        nome: form.nome.value,
        peso: form.peso.value,
        altura: form.altura.value,
        gordura: form.gordura.value,
        imc: calculaImc(form.peso.value, form.altura.value)
    }
```


Criar um elemento HTML no DOM basta usar o createElement

```
function montaTd(dado, classe) {
    var td = document.createElement("td");
    td.classList.add(classe);
    td.textContent = dado;

    return td;
}
```
Colocar conteúdo em uma tag HTML <h2></h2>

```
document.getElementById("demo").innerHTML = "Paragraph changed!";
```

###Links diretos:


Desenvolvimento
---------------------
-   [Rodolfo Peixoto](http://www.rogpe.me)

